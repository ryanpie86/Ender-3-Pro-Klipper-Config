# This file applies to a 2022 Creality Ender 3 Pro with a 2022 SKR Mini E3 V3 board, Creality Sprite Pro extruder,
# and Creality CR-Touch probe attachment.Endstops have been optimized for a perfect 0,0 and centered home position.
# The printer this config was made for has dual-Z motors, and scripts to level the gantry by force.
# You will need to print my gantry hooks located here in order to use it properly:
# 
# https://than.gs/m/734345 <- ryanpie86 Gantry Leveling Hooks on Thangs.com
#
# Press button HOOK GANTRY to home Z, raise to 235 and beep once when it has arrived. Install the hooks and then press ALIGN GANTRY.
# The gantry will force down on the hooks and skip- this will be loud and frightening if you haven't done this before.
# The gantry will then raise up enough to remove the hooks; you may need to bend them with a little pressure to get them off.
# You can start your print after that. Make sure your print includes a G28 to start!

# This file contains common pin mappings for the BIGTREETECH SKR mini
# E3 v3.0. To use this config, the firmware should be compiled for the
# STM32G0B1 with a "8KiB bootloader" and USB communication/USART.

# The "make flash" command does not work on the SKR mini E3. Instead,
# after running "make", copy the generated "out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the SKR
# mini E3 with that SD card.

# See docs/Config_Reference.md for a description of parameters.

[include speed_test.cfg]
[respond]

[gcode_macro HOOK_GANTRY]
gcode:
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=60
    G28
    G1 Z235 F1500
    SET_PIN PIN=beeper VALUE=1.00
    SET_PIN PIN=beeper VALUE=0.00

[gcode_macro ALIGN_GANTRY]
gcode:
    G1 Z215 F1500
    G1 Z225 F1500
    SET_PIN PIN=beeper VALUE=1.00
    SET_PIN PIN=beeper VALUE=0.00

#     In CURA use the following machine Start GCODE:
#
#     START_PRINT EXTRUDER_TEMP={material_print_temperature_layer_0} BED_TEMP={material_bed_temperature_layer_0} AREA_START=%MINX%,%MINY% AREA_END=%MAXX%,%MAXY%
#
#     If you want to edit your Start Print GCODE, do it in this configuration instead.

[gcode_macro START_PRINT]
gcode:
    G28; Home
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    # Start bed heating (but don't wait for it)
    M140 S{BED_TEMP}
    # Use absolute coordinates
    G90
    # Wait for bed to reach temperature
    M190 S{BED_TEMP}
    #Start extruder heating (but don't wait for it)
	{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(220)|float %}
    M109 S{EXTRUDER_TEMP}
    PAUSE
    M83
    G1 E25 F300
    SET_PIN PIN=beeper VALUE=1.00
    SET_PIN PIN=beeper VALUE=0.00

#     In CURA use the following machine End GCODE:
#
#     END_PRINT
#
#     If you want to edit your End Print GCODE, do it in this configuration instead.

[gcode_macro END_PRINT]
gcode:
	G91 ;Relative positioning
	M106 S0 ;Turn-off fan
	M104 S0 ;Turn-off hotend
	M140 S0 ;Turn-off bed
	G1 E-2 F2700 ;Retract a bit
	G1 E-2 Z0.2 F2400 ;Retract and raise Z
	G1 X5 Y5 F3000 ;Wipe out
	G1 Z10 ;Raise Z more
	G90 ;Absolute positioning
	G1 X10 Y200
	M84 X Y E ;Disable all steppers but Z

[include mainsail.cfg]

[mcu]
baud: 250000
serial: /dev/serial/by-id/usb-Klipper_stm32g0b1xx_530042000250415339373620-if00
restart_method: command

[mcu rpi]
serial: /tmp/klipper_host_mcu

[adxl345]
cs_pin: rpi:None

[resonance_tester]
accel_chip: adxl345
probe_points:
    117.5, 117.5, 60  # center of bed @ 60 high

[endstop_phase]

[stepper_x]
step_pin: PB13
dir_pin: !PB12
enable_pin: !PB14
microsteps: 16
rotation_distance: 40
endstop_pin: ^PC0
position_endstop: 1
position_min: 1
position_max: 235
homing_speed: 75

[tmc2209 stepper_x]
uart_pin: PC11
tx_pin: PC10
uart_address: 0
run_current: 0.600
#stealthchop_threshold: 999999

[stepper_y]
step_pin: PB10
dir_pin: !PB2
enable_pin: !PB11
microsteps: 16
rotation_distance: 40
endstop_pin: ^PC1
position_endstop: -11
position_max: 233
position_min: -11
homing_speed: 75

[tmc2209 stepper_y]
uart_pin: PC11
tx_pin: PC10
uart_address: 2
run_current: 0.580
#stealthchop_threshold: 999999

[stepper_z]
step_pin: PB0
dir_pin: PC5
enable_pin: !PB1
microsteps: 16
rotation_distance: 8
endstop_pin:probe:z_virtual_endstop
position_max: 235
position_min: -3

[tmc2209 stepper_z]
uart_pin: PC11
tx_pin: PC10
uart_address: 1
run_current: 0.600
#stealthchop_threshold: 999999

# Measure 120mm, then extrude 100mm
# G1 E100 F100
# step_distance = old_e_steps * ((120 - distance_to_mark) / 100)

[extruder]
max_extrude_only_distance: 120
step_pin: PB3
dir_pin: !PB4
enable_pin: !PD1
microsteps: 16
rotation_distance: 7.4088
nozzle_diameter: 0.8
filament_diameter: 1.750
heater_pin: PC8
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA0
min_temp: 0
max_temp: 300
max_extrude_cross_section: 50.0
pressure_advance: 0.04

[tmc2209 extruder]
uart_pin: PC11
tx_pin: PC10
uart_address: 3
run_current: 0.700
#stealthchop_threshold: 999999

[filament_switch_sensor runout]
pause_on_runout: True
switch_pin: PC15

[heater_bed]
heater_pin: PC9
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC4
min_temp: 0
max_temp: 130

[printer]
kinematics: cartesian
max_velocity: 275
max_accel: 6000
max_z_velocity: 5
max_z_accel: 100
SQUARE_CORNER_VELOCITY: 5

[bltouch]
sensor_pin: ^PC14
control_pin: PA1
x_offset: -32
y_offset: -41
#z_offset: 3
speed: 5
samples: 2
pin_move_time: .5
sample_retract_dist: 7
probe_with_touch_mode: True
stow_on_each_sample: False

[safe_z_home]
# home_xy_position: 113.5,121.5 # Change coordinates to the center of your print bed
home_xy_position: 117.5,117.5
z_hop: 10                 # Move up 10mm
z_hop_speed: 5

[bed_mesh]
speed: 100
horizontal_move_z: 7
probe_count: 3,3
mesh_min: 25,40 #front left screw
mesh_max: 196.5,194 #rear right screw
mesh_pps: 20,20
algorithm: lagrange
fade_start: 0.2 #number here is Z height
fade_end: 2

[screws_tilt_adjust]
screw1: 58.5,71.5
screw1_name: front left screw
screw2: 228.5,71.5
screw2_name: front right screw
screw3: 228.5,234
screw3_name: rear right screw
screw4: 58.5,234
screw4_name: rear left screw
horizontal_move_z: 10
speed: 100
screw_thread: CW-M4

[force_move]
enable_force_move: True

[idle_timeout]
gcode:
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET=0
  M84 X Y E
timeout: 43200

########################################
### HARDWARE PINOUTS BELOW THIS LINE ###
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PB5,  EXP1_3=PA9,   EXP1_5=PA10, EXP1_7=PB8, EXP1_9=<GND>,
    EXP1_2=PA15, EXP1_4=<RST>, EXP1_6=PB9,  EXP1_8=PD6, EXP1_10=<5V>

[output_pin beeper]
pin: PB5

[static_digital_output usb_pullup_enable]
pins: !PA14

[heater_fan heatbreak_cooling_fan]
pin: PC7

[heater_fan controller_fan]
pin: PB15

[fan]
pin: PC6

[display]
lcd_type: emulated_st7920
spi_software_miso_pin: PD8 # status led, Virtual MISO
spi_software_mosi_pin: PD6
spi_software_sclk_pin: PB9
en_pin: PB8
encoder_pins: ^PA10, ^PA9
click_pin: ^!PA15

[temperature_sensor pi_temp]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

####################################
### GCODE MACROS BELOW THIS LINE ###
####################################

### This macro is to mesh only the area of the bed which will be printed on
### In order to take advantage of this option, there is further work you will need to do in your slicer software
### If you do not use Cura, please visit the following link to finish setting this up:
#
#                 https://gist.github.com/ChipCE/95fdbd3c2f3a064397f9610f915f7d02
#
### If you DO use Cura, I have already taken most steps for you. Please visit the following link to download the post processing plugin. Save this text as KlipperPrintArea.py.
#
#                 https://raw.githubusercontent.com/ChipCE/Slicer-profile/master/cura-slicer/scripts/KlipperPrintArea.py
#
### In cura menu Help -> Show configuration folder. - Copy the python script from the above link in to scripts folder. - Restart Cura - In cura menu Extensions ->
### Post processing -> Modify G-Code and select Klipper print area mesh

[gcode_macro BED_MESH_CALIBRATE]
rename_existing: BED_MESH_CALIBRATE_BASE
; gcode parameters
variable_parameter_AREA_START : 0,0
variable_parameter_AREA_END : 0,0
; the clearance between print area and probe area 
variable_mesh_area_offset : 5.0
; number of sample per probe point
variable_probe_samples : 2
; minimum probe count
variable_min_probe_count : 3
; scale up the probe count, should be 1.0 ~ < variable_max_probe_count/variable_min_probe_count
variable_probe_count_scale_factor : 1.0
gcode:
    {% if params.AREA_START and params.AREA_END %}
        {% set bedMeshConfig = printer["configfile"].config["bed_mesh"] %}
        {% set safe_min_x = bedMeshConfig.mesh_min.split(",")[0]|float %}
        {% set safe_min_y = bedMeshConfig.mesh_min.split(",")[1]|float %}
        {% set safe_max_x = bedMeshConfig.mesh_max.split(",")[0]|float %}
        {% set safe_max_y = bedMeshConfig.mesh_max.split(",")[1]|float %}

        {% set area_min_x = params.AREA_START.split(",")[0]|float %}
	{% set area_min_y = params.AREA_START.split(",")[1]|float %}
	{% set area_max_x = params.AREA_END.split(",")[0]|float %}
	{% set area_max_y = params.AREA_END.split(",")[1]|float %}

	{% if bedMeshConfig.probe_count.split(",")|length == 2 %}
            {% set meshPointX = bedMeshConfig.probe_count.split(",")[0]|int %}
            {% set meshPointY = bedMeshConfig.probe_count.split(",")[1]|int %}
        {% else %}
            {% set meshPointX = bedMeshConfig.probe_count.split(",")[0]|int %}
            {% set meshPointY = bedMeshConfig.probe_count.split(",")[0]|int %}
        {% endif %}

	{% set meshMaxPointX = meshPointX %}
	{% set meshMaxPointY = meshPointY %}


        {% if (area_min_x < area_max_x) and (area_min_y < area_max_y) %}
            {% if area_min_x - mesh_area_offset >=  safe_min_x %}
                {% set area_min_x = area_min_x - mesh_area_offset %}
            {% else %}
                {% set area_min_x = safe_min_x %}
            {% endif %}

            {% if area_min_y - mesh_area_offset >=  safe_min_y %}
                {% set area_min_y = area_min_y - mesh_area_offset %}
            {% else %}
                {% set area_min_y = safe_min_y %}
            {% endif %}

            {% if area_max_x + mesh_area_offset <=  safe_max_x %}
                {% set area_max_x = area_max_x + mesh_area_offset %}
            {% else %}
                {% set area_max_x = safe_max_x %}
            {% endif %}

            {% if area_max_y + mesh_area_offset <=  safe_max_y %}
                {% set area_max_y = area_max_y + mesh_area_offset %}
            {% else %}
                {% set area_max_y = safe_max_y %}
            {% endif %}

            {% set meshPointX = (meshPointX * (area_max_x - area_min_x) / (safe_max_x - safe_min_x) * probe_count_scale_factor)|round(0)|int %}
            {% if meshPointX < min_probe_count %}
                {% set meshPointX = min_probe_count %}
            {% endif %}
	    {% if meshPointX > meshMaxPointX %}
                {% set meshPointX = meshMaxPointX %}
            {% endif %}

            {% set meshPointY = (meshPointY * (area_max_y -area_min_y ) / (safe_max_y - safe_min_y) * probe_count_scale_factor )|round(0)|int %}
            {% if meshPointY < min_probe_count %}
                {% set meshPointY = min_probe_count %}
            {% endif %}
	    {% if meshPointY > meshMaxPointY %}
                {% set meshPointY = meshMaxPointY %}
            {% endif %}

            BED_MESH_CALIBRATE_BASE mesh_min={area_min_x},{area_min_y} mesh_max={area_max_x},{area_max_y} probe_count={meshPointX},{meshPointY} samples={probe_samples|int}
        {% else %}
            BED_MESH_CALIBRATE_BASE
        {% endif %}
    {% else %}
        BED_MESH_CALIBRATE_BASE
    {% endif %}

### This is the SPEED TEST MACRO written by Andrew Ellis (ellis3dp.com).
### Please read the documentation before torturing your printer with it!
#
#     https://ellis3dp.com/Print-Tuning-Guide/articles/determining_max_speeds_accels.html
#
### Home, get position, throw around toolhead, home again.
### If MCU stepper positions (first line in GET_POSITION) are greater than a full step different (your number of microsteps), then skipping occured.
### We only measure to a full step to accomodate for endstop variance.
### Example: TEST_SPEED SPEED=300 ACCEL=5000 ITERATIONS=10

[gcode_macro TEST_SPEED]
gcode:
	# Speed
	{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
	# Iterations
	{% set iterations = params.ITERATIONS|default(5)|int %}
	# Acceleration
	{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
	# Bounding inset for large pattern (helps prevent slamming the toolhead into the sides after small skips, and helps to account for machines with imperfectly set dimensions)
	{% set bound = params.BOUND|default(20)|int %}
	# Size for small pattern box
	{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
	
	# Large pattern
		# Max positions, inset by BOUND
		{% set x_min = printer.toolhead.axis_minimum.x + bound %}
		{% set x_max = printer.toolhead.axis_maximum.x - bound %}
		{% set y_min = printer.toolhead.axis_minimum.y + bound %}
		{% set y_max = printer.toolhead.axis_maximum.y - bound %}
	
	# Small pattern at center
		# Find X/Y center point
		{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
		{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
		
		# Set small pattern box around center point
		{% set x_center_min = x_center - (smallpatternsize/2) %}
		{% set x_center_max = x_center + (smallpatternsize/2) %}
		{% set y_center_min = y_center - (smallpatternsize/2) %}
		{% set y_center_max = y_center + (smallpatternsize/2) %}

	# Save current gcode state (absolute/relative, etc)
	SAVE_GCODE_STATE NAME=TEST_SPEED
	
	# Output parameters to g-code terminal
	{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
	
	# Home and get position for comparison later:
		G28
		# QGL if not already QGLd (only if QGL section exists in config)
		{% if printer.configfile.settings.quad_gantry_level %}
			{% if printer.quad_gantry_level.applied == False %}
				QUAD_GANTRY_LEVEL
				G28 Z
			{% endif %}
		{% endif %}	
		G90
		G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
		G4 P1000 
		GET_POSITION

	# Go to starting position
	G0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}

	# Set new limits
	SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}

	{% for i in range(iterations) %}
		# Large pattern
			# Diagonals
			G0 X{x_min} Y{y_min} F{speed*60}
			G0 X{x_max} Y{y_max} F{speed*60}
			G0 X{x_min} Y{y_min} F{speed*60}
			G0 X{x_max} Y{y_min} F{speed*60}
			G0 X{x_min} Y{y_max} F{speed*60}
			G0 X{x_max} Y{y_min} F{speed*60}
			
			# Box
			G0 X{x_min} Y{y_min} F{speed*60}
			G0 X{x_min} Y{y_max} F{speed*60}
			G0 X{x_max} Y{y_max} F{speed*60}
			G0 X{x_max} Y{y_min} F{speed*60}
		
		# Small pattern
			# Small diagonals 
			G0 X{x_center_min} Y{y_center_min} F{speed*60}
			G0 X{x_center_max} Y{y_center_max} F{speed*60}
			G0 X{x_center_min} Y{y_center_min} F{speed*60}
			G0 X{x_center_max} Y{y_center_min} F{speed*60}
			G0 X{x_center_min} Y{y_center_max} F{speed*60}
			G0 X{x_center_max} Y{y_center_min} F{speed*60}
			
			# Small box
			G0 X{x_center_min} Y{y_center_min} F{speed*60}
			G0 X{x_center_min} Y{y_center_max} F{speed*60}
			G0 X{x_center_max} Y{y_center_max} F{speed*60}
			G0 X{x_center_max} Y{y_center_min} F{speed*60}
	{% endfor %}

	# Restore max speed/accel/accel_to_decel to their configured values
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel} 

	# Re-home and get position again for comparison:
		G28
		# Go to XY home positions (in case your homing override leaves it elsewhere)
		G90
		G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
		G4 P1000 
		GET_POSITION

	# Restore previous gcode state (absolute/relative, etc)
	RESTORE_GCODE_STATE NAME=TEST_SPEED

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 71.959
#*# pid_ki = 1.744
#*# pid_kd = 742.075
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 17.605
#*# pid_ki = 0.93
#*# pid_kd = 82.525
#*#
#*# [bltouch]
#*# z_offset = 2.380
#*#
#*# [input_shaper]
#*# shaper_type_x = 3hump_ei
#*# shaper_freq_x = 78.0
#*# shaper_type_y = mzv
#*# shaper_freq_y = 33.6
